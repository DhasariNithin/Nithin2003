@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Form.cshtml";
}


<!DOCTYPE html>
<html>
<head>
    <title>Google Pay UPI Integration</title>
    <script async src="https://pay.google.com/gp/p/js/pay.js"></script>
</head>
<body class="bg-default">
    <div class="main-content">
        <div class="header bg-gradient-primary py-7 py-lg-8 pt-lg-9">
            <div class="container">
                <div class="header-body text-center mb-7">
                    <div class="row justify-content-center">
                        <div class="col-xl-5 col-lg-6 col-md-8 px-5">
                            <h1 class="text-white">Welcome!</h1>
                            <p class="text-lead text-white"> Enter Below Details To Make UPI Payment</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="separator separator-bottom separator-skew zindex-100">
                <svg x="0" y="0" viewBox="0 0 2560 100" preserveAspectRatio="none" version="1.1" xmlns="http://www.w3.org/2000/svg">
                    <polygon class="fill-default" points="2560 0 2560 100 0 100"></polygon>
                </svg>
            </div>
        </div>

        <!-- Page content -->
        <div class="container mt--8 pb-5">
            <div class="row justify-content-center">
                <div class="col-lg-5 col-md-7">
                    <div class="card bg-secondary border-0 mb-0">
                        <div class="card-body px-lg-5 py-lg-5">
                            <div class="text-center text-muted mb-4">
                                <strong>UPI Payment</strong>
                            </div>

                            <h2>Pay with Debit or Credit Card</h2>
                            @*  <button id="google-pay-button">Make payment</button> <!-- Google Pay Button --> *@

                            <body>
                                <div id="container" class="padding-after"></div>
                            </body>

                            <script type="application/javascript">
                                function getGooglePaymentsClient() {
                                  return new google.payments.api.PaymentsClient({
                                    environment: 'TEST',
                                  });
                                }

                                function onGooglePayLoaded() {
                                  const paymentsClient = getGooglePaymentsClient();
                                  addGooglePayButton();
                                }

                                function addGooglePayButton() {
                                  const paymentsClient = getGooglePaymentsClient();

                                  const buttonOptions = (google.payments.api.ButtonOptions = {
                                    onClick: onGooglePaymentButtonClicked,
                                  });

                                  console.log(JSON.stringify(buttonOptions, null, 2));

                                  const button = paymentsClient.createButton(buttonOptions);

                                  let container = document.getElementById('container');
                                  if (container.firstChild) {
                                    container.replaceChild(button, container.firstChild);
                                  } else {
                                    container.appendChild(button);
                                  }
                                }

                                function getRequest() {
                                  const allowedCardNetworks = [
                                    'AMEX',
                                    'DISCOVER',
                                    'INTERAC',
                                    'JCB',
                                    'MASTERCARD',
                                    'VISA',
                                  ];

                                  // also called IsReadyToPayRequest in the docs
                                  googlePayConfig = {
                                    apiVersion: 2,
                                    apiVersionMinor: 0,
                                  };
                                  paymentDataRequest = Object.assign({}, googlePayConfig);
                                  // currency code is ISO 4217 code
                                  // country code is ISO 3166-1 alpha-2 code for where the transaction is processed
                                  paymentDataRequest.transactionInfo = {
                                    totalPriceStatus: 'FINAL',
                                    totalPrice: '0', // will change this later
                                    currencyCode: 'INR',
                                    countryCode: 'IN',
                                  };
                                  paymentDataRequest.merchantInfo = {
                                    merchantId: 'BCR2DN6TQ7DLV7SQ',
                                    merchantName: 'Nithin',
                                  };
                                  const tokenizationSpec = {
                                    type: 'PAYMENT_GATEWAY',
                                    parameters: {
                                      gateway: 'cardconnect',
                                      gatewayMerchantId: 'gatewayMerchantId',
                                    },
                                  };
                                  const cardPaymentMethod = {
                                    type: 'CARD',
                                    tokenizationSpecification: tokenizationSpec,
                                    parameters: {
                                      allowedCardNetworks: allowedCardNetworks,
                                      allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],
                                      //billingAddressParamters: {
                                      //    format: "FULL",
                                      //    phoneNumberRequired: false
                                      //}
                                    },
                                  };
                                  paymentDataRequest.shippingAddressRequired = false;
                                  paymentDataRequest.allowedPaymentMethods = [cardPaymentMethod];
                                  return paymentDataRequest;
                                }

                                function onGooglePaymentButtonClicked() {
                                  const paymentDataRequest = getRequest();
                                  console.log(JSON.stringify(paymentDataRequest, null, 2));
                                  //paymentDataRequest.transactionInfo = getGoogleTransactionInfo();

                                  const paymentsClient = getGooglePaymentsClient();
                                  paymentsClient.loadPaymentData(paymentDataRequest).then((paymentData) => {
                                    console.log(paymentData.paymentMethodData.tokenizationData.token);

                                    }).catch((error) => {
                                    // errors will be displayed in the Google Pay window
                                    console.log(error);
                                    return;
                                    });
                                }

                                function processPayment(paymentData) {
                                  console.log(paymentData.paymentMethodData.tokenizationData.token);
                                }

                            </script>

                            <script async
                                    src="https://pay.google.com/gp/p/js/pay.js"
                                    onload="onGooglePayLoaded()">
                            </script>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
